FROM httpd:2.4-alpine AS builder

WORKDIR /tmp

RUN apk add --no-cache \
        apr-dev \
        autoconf \
        automake \
        curl-dev \
        g++ \
        glib-dev \
        libtool \
        libxml2-dev \
        libxslt-dev \
        make \
        perl-dev \
        py3-six \
        python \
        zlib-dev

RUN wget https://www.aleksey.com/xmlsec/download/xmlsec1-<%= image.labels['xmlsec_version'] %>.tar.gz \
 && tar zxf xmlsec1-<%= image.labels['xmlsec_version'] %>.tar.gz \
 && cd xmlsec1-<%= image.labels['xmlsec_version'] %> \
 && ./configure \
        --enable-soap \
 && make \
 && make install

RUN wget https://dev.entrouvert.org/releases/lasso/lasso-<%= image.labels['lasso_version'] %>.tar.gz \
 && tar zxf lasso-<%= image.labels['lasso_version'] %>.tar.gz \
 && cd lasso-<%= image.labels['lasso_version'] %> \
 && ./configure \
        --with-python=/usr/bin/python3.8 \
 && make \
 && make install

RUN wget https://github.com/latchset/mod_auth_mellon/releases/download/<%= image.vars['mam_release'] %>/mod_auth_mellon-<%= image.labels['mod_auth_mellon_version'] %>.tar.gz \
 && tar xvf mod_auth_mellon-0.16.0.tar.gz \
 && cd mod_auth_mellon-0.16.0 \
 && aclocal \
 && autoheader \
 && autoconf \
 && ./configure \
        --with-apxs2=/usr/local/apache2/bin/apxs \
 && make \
 && make install

FROM httpd:2.4-alpine

WORKDIR /

RUN apk add --no-cache \
        glib \
        curl \
        libxslt \
        libltdl
        rsync

COPY --from=builder /usr/local/apache2/modules/mod_auth_mellon.so /usr/local/apache2/modules/mod_auth_mellon.so
COPY --from=builder /usr/local/lib/liblasso* /usr/local/lib/
COPY --from=builder /usr/local/lib/libxmlsec1* /usr/local/lib/

<%= snippet('labels', binding) -%>

<%= snippet('docker-entrypoint', binding) -%>

<%= snippet('dockerize', binding) -%>

<%= snippet('tini', binding) -%>

COPY 50-copy-config.sh /docker-entrypoint.d/


RUN perl -pi -e 's/^Listen 80$/Listen 8080/' /usr/local/apache2/conf/httpd.conf \
 && echo 'Include /usr/local/apache2/conf/application.conf' >> /usr/local/apache2/conf/httpd.conf \
 && mkdir /application /config \
 && chown root:root \
        /application \
        /config \
        /usr/local/apache2/logs \
 && chmod 755 /config \
 && chown -R root:root /usr/local/apache2 \
 && find /usr/local/apache2/conf -type d -exec chmod 0775 {} \; \
 && find /usr/local/apache2/conf -type f -exec chmod 0664 {} \;

WORKDIR /application

EXPOSE 8080

ENTRYPOINT ["/tini", "--", "/docker-entrypoint.sh"]
CMD ["httpd-foreground"]
